<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.bookMapper" >
  <resultMap id="BaseResultMap" type="com.domain.book" >
    <id column="bookid" property="bookid" jdbcType="VARCHAR" />
    <result column="bookname" property="bookname" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="account" property="account" jdbcType="INTEGER" />
    <result column="cover" property="cover" jdbcType="VARCHAR" />
    <result column="bid" property="bid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    bookid, bookname, author, price, account, cover, bid
  </sql>
  <select id="selectAll" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from book
  </select>
  <select id="searchByBookName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
   <include refid="Base_Column_List" />
    from book
    where bookname like CONCAT('%',#{bookname,jdbcType=VARCHAR},'%')  
  </select>
  <select id="selectByBid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from book
    where bid = #{bids}
  </select>
  <select id="selectByBookName" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select 
   bookid
    from book
    where bookname = #{author,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from book
    where bookid = #{bookid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByBookName" parameterType="java.lang.String" >
    delete from book
    where bookname = #{bookname,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.domain.book" >
    insert into book (bookid, bookname, author, 
      price, account, cover, 
      bid)
    values (#{bookid,jdbcType=VARCHAR}, #{bookname,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{account,jdbcType=INTEGER}, #{cover,jdbcType=VARCHAR}, 
      #{bid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.domain.book" >
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookid != null" >
        bookid,
      </if>
      <if test="bookname != null" >
        bookname,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="cover != null" >
        cover,
      </if>
      <if test="bid != null" >
        bid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookid != null" >
        #{bookid,jdbcType=VARCHAR},
      </if>
      <if test="bookname != null" >
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="account != null" >
        #{account,jdbcType=INTEGER},
      </if>
      <if test="cover != null" >
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="bid != null" >
        #{bid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.domain.book" >
    update book
    <set >
      <if test="bookname != null" >
        bookname = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=INTEGER},
      </if>
      <if test="cover != null" >
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="bid != null" >
        bid = #{bid,jdbcType=INTEGER},
      </if>
    </set>
    where bookid = #{bookid,jdbcType=VARCHAR}
  </update>
  <update id="updateByBookName" parameterType="com.domain.book" >
    update book
    set
      author = #{author,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE}
    where bookname = #{bookname,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.domain.book" >
    update book
    set bookname = #{bookname,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      account = #{account,jdbcType=INTEGER},
      cover = #{cover,jdbcType=VARCHAR},
      bid = #{bid,jdbcType=INTEGER}
    where bookid = #{bookid,jdbcType=VARCHAR}
  </update>
</mapper>